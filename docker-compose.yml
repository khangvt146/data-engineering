version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    hostname: zookeeper
    restart: always
    container_name: zookeeper
    ports:
      - "2181:2181"
    mem_limit: 1g
    cpus: 1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
        test: nc -z localhost 2181 || exit -1
        interval: 30s
        timeout: 10s
        retries: 5
    volumes:
      - ./zookeeper/data:/var/lib/zookeeper/data
      - ./zookeeper/log:/var/lib/zookeeper/log
    networks:
      - smart_farm_network

  broker:
    image: confluentinc/cp-kafka:5.5.3
    hostname: broker
    restart: always
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    mem_limit: 1g
    cpus: 2
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:19092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
        test: nc -z localhost 19092 || exit -1
        interval: 30s
        timeout: 10s
        retries: 5
    volumes:
      - ./kafka/data:/var/lib/kafka/data
    networks:
      - smart_farm_network

  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0-SNAPSHOT
    restart: always
    ports:
      - "19000:9000"
    mem_limit: 1g
    cpus: 1
    environment:
      KAFKA_BROKERCONNECT: "broker:19092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - broker
    networks:
      - smart_farm_network
  
  hivemq:
    image: hivemq/hivemq4:latest
    container_name: hivemq
    mem_limit: 1g
    ports:
      - 1883:1883
      - 8080:8080
    environment:
      HIVEMQ_CONTROL_CENTER_USER: admin
      HIVEMQ_CONTROL_CENTER_PASSWORD: admin
    healthcheck:
      test: ["CMD", "echo", "\"\"", ">", "/dev/tcp/127.0.0.1/1883"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - smart_farm_network
    depends_on:
      broker:
        condition: service_healthy

  ingestion-service:
    image: reecoteam123/ingestion-service-de:v1.0.0
    container_name: de-ingestion-service
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:19092
      DB_HOST: postgres
      DB_PORT: 5432
    networks:
      - smart_farm_network
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy
    restart: always

  db:
    image: postgres:15.2
    hostname: postgres
    restart: always
    environment:
      - POSTGRES_USER=khangvt146
      - POSTGRES_PASSWORD=khang123@@
    ports:
      - '5432:5432'
    volumes: 
      - ./postgre-data:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
        interval: 30s
        timeout: 10s
        retries: 5
    networks:
      - smart_farm_network

networks:
  smart_farm_network:
    external: true